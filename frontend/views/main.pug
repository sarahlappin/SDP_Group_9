doctype html
html
  head
    title #{pageTitle} | eIEIO
    link(rel="stylesheet" href="/static/styles.css")
    script(src="https://canvasjs.com/assets/script/canvasjs.min.js")      
    script(src="https://cdn.plot.ly/plotly-latest.min.js")

    //- link(rel="icon" href="images/sdp-logo.png" type="image/x-icon")

    //- Script for Carbon Monoxide Graph
    script(type='text/javascript').
      window.onload = function () {

        
        //- Text for most recent readings - CO
        var currCO = parseFloat(#{surveyCo});
        var userCO = parseFloat(#{userCO});
        if (currCO > (userCO + 5)) {
          var str = "High Levels of CO";
          var result = str.fontcolor("red");
          document.getElementById("COStatus").innerHTML=result;
        } else if (currCO < (userCO - 5)) {
          var str = "Low Levels of CO";
          var result = str.fontcolor("red");
          document.getElementById("COStatus").innerHTML=result;
        } else {
          var str = "OK";
          var result = str.fontcolor("green");
          document.getElementById("COStatus").innerHTML=result;
        }       


        //- Text for most recent readings - moisture
        var currMoist = parseFloat(#{surveyMoist});
        var userMoist = parseFloat(#{userMoist});
        if (currMoist > (userMoist + 5)) {
          var str = "Very Moist";
          var result = str.fontcolor("red");
          document.getElementById("moistStatus").innerHTML=result;
        } else if (currMoist < (userMoist - 5)) {
          var str = "Very Dry";
          var result = str.fontcolor("red");
          document.getElementById("moistStatus").innerHTML=result;
        } else {
          var str = "OK";
          var result = str.fontcolor("green");
          document.getElementById("moistStatus").innerHTML=result;
        }

        
        //- Text for most recent readings - pH
        var currPH = parseFloat(#{surveyPH});
        var userPH = parseFloat(#{userPH});
        if (currPH > (userPH + 0.5)) {
          var str = "Too Alkaline";
          var result = str.fontcolor("red");
          document.getElementById("PHStatus").innerHTML=result;
        } else if (currPH < (userPH - 0.5)) {
          var str = "Too Acidic";
          var result = str.fontcolor("red");
          document.getElementById("PHStatus").innerHTML=result;
        } else {
          var str = "OK";
          var result = str.fontcolor("green");
          document.getElementById("PHStatus").innerHTML=result;
        }       


        // C0 Heatmap
        window.PLOTLYENV = { BASE_URL: "https://plot.ly" };

        var COheatmap = document.getElementById("co-heatmap");

        var x = [-3.1964814, -3.1930868, -3.1896922, -3.1862976];
        var y = [55.94071, 55.94153];
        var z = [[0.5,1,1,2],[1.5,2,2.5,0.5]];

        var text = z.map (function(z, i) { return z.map (function (value, j) {
          return ` Longitude: ${y[i]}<br> Latitude: ${x[j]} <br> Value: ${value.toFixed(2)}ppm `
            });
          });

          Plotly.plot(COheatmap, [{
            type: 'heatmap',
            x: x,
            y: y,
            z: z,
            text: text,
            hoverinfo: 'text',
            zsmooth: 'best',
            colorscale: [
                [0, "#ffffff"],
                [1, "#2c3e50"]
              ]
          }], {
            title: "Carbon Monoxide Levels (ppm)",
            xaxis: { title: 'Latitude' },
            yaxis: { title: 'Longitude' },
            autosize: true,
            showLegend: true,
            font: {
              size: 12,
              family: "Arial, sans serif"
            },
            height: 500,
          });
        
        
        // Soil Moisture Heatmap
        window.PLOTLYENV = { BASE_URL: "https://plot.ly" };

        var moistureheatmap = document.getElementById("moisture-heatmap");

        var x = [-3.1964814, -3.1930868, -3.1896922, -3.1862976];
        var y = [55.94071, 55.94153];
        var z = [[750,600,580,620],[650,570,600,600]];

        var text = z.map (function(z, i) { return z.map (function (value, j) {
          return ` Longitude: ${y[i]}<br> Latitude: ${x[j]} <br> Value: ${value.toFixed(2)}% `
            });
          });

          Plotly.plot(moistureheatmap, [{
            type: 'heatmap',
            x: x,
            y: y,
            z: z,
            text: text,
            hoverinfo: 'text',
            zsmooth: 'best',
            colorscale: [
          [0, "#ffffff"],
          [1, "#076585"]
        ]
          }], {
            title: "Soil Moisture (%)",
            xaxis: { title: 'Latitude' },
            yaxis: { title: 'Longitude' },
            autosize: true,
            showLegend: true,
            font: {
              size: 12,
              family: "Arial, sans serif"
            },
            height: 500,
          });

        // pH Heatmap
        window.PLOTLYENV = { BASE_URL: "https://plot.ly" };

        var pHheatmap = document.getElementById("pH-heatmap");

        var x = [-3.1964814, -3.1930868, -3.1896922, -3.1862976];
        var y = [55.94071, 55.94153];
        var z = [[7,6,5,6],[6,7,8,7]];

        var text = z.map (function(z, i) { return z.map (function (value, j) {
          return ` Longitude: ${y[i]}<br> Latitude: ${x[j]} <br> Value: ${value.toFixed(2)} `
            });
          });

          Plotly.plot(pHheatmap, [{
            type: 'heatmap',
            x: x,
            y: y,
            z: z,
            text: text,
            hoverinfo: 'text',
            zsmooth: 'fast',
            colorscale: [
          [0, "#ff9f80"],
          [0.25, "#ffcc99"],
          [0.5, "#c6ebd8"],
          [0.75, "#ddccff"],
          [1, "#adadeb"]
        ]
          }], {
            title: "Soil pH",
            xaxis: { title: 'Latitude' },
            yaxis: { title: 'Longitude' },
            autosize: true,
            showLegend: true,
            font: {
              size: 12,
              family: "Arial, sans serif"
            },
            height: 500,
          });




      var chart = new CanvasJS.Chart("chartContainer1",
      {
      title:{
        text: "Carbon Monoxide",
        fontFamily: "sans-serif",
        fontSize: 20
      },
      axisX: {
        interval: 1,
        title: "Month",
        gridThickness: 0,
        lineThickness: 2,
        tickLength: 7,
        tickThickness: 2
      },
      axisY:{
        interval: 1,
        title: "Average CO (ppm)",
        gridThickness: 0,
        lineThickness: 2,
        tickLength: 7,
        tickThickness: 2,
        viewportMinimum: 0,
        stripLines: [
          {                
            value: #{userCO},  // ---------- get desired value -------
            thickness: 1,
            color: "blue",
          },
          {                
            startValue: #{userCO} - 0.5,  // ---------- get desired value -------
            endValue: #{userCO} + 0.5,  // ---------- get desired value -------
            thickness: 1,
            color: "#99ccff"
        }
          ]                 
      },
      data: [
      {
      type: "line",
      color: "orange",
      dataPoints: [
      { x: new Date(2019, 00, 1), y: 4.0 },
      { x: new Date(2019, 01, 1), y: 4.3 },
      { x: new Date(2019, 02, 1), y: 4.2 },
      { x: new Date(2019, 03, 1), y: 3.6 },
      { x: new Date(2019, 04, 1), y: 3.7 },
      { x: new Date(2019, 05, 1), y: 3.9 },
      { x: new Date(2019, 06, 1), y: 4.1 },
      { x: new Date(2019, 07, 1), y: 3.8 },
      ]
      }
      ]
      });
      chart.render();

      var chart = new CanvasJS.Chart("chartContainer2",
      {
      title:{
        text: "Soil Moisture",
        fontFamily: "sans-serif",
        fontSize: 20
      },
      axisX: {
        interval: 1,
        title: "Month",
        gridThickness: 0,
        lineThickness: 2,
        tickLength: 7,
        tickThickness: 2
      },
      axisY:{
        interval: 10,
        title: "Average Soil Moisture (%)",
        gridThickness: 0,
        lineThickness: 2,
        tickLength: 7,
        tickThickness: 2,
        viewportMaximum: 100,
        minimum: 40,
        maximum: 100,
        stripLines: [
          {                
            value: #{userMoist},  // ---------- get desired value -------
            thickness: 1,
            color: "blue"
          },
          {                
            startValue: #{userMoist} -5,  // ---------- get desired value -------
            endValue: #{userMoist} + 5,  // ---------- get desired value -------
            thickness: 1,
            color: "#99ccff"
        }
          ]                 
      },
      data: [
      {
      type: "line",
      color: "green",
      dataPoints: [
      { x: new Date(2019, 00, 1), y: 65 },
      { x: new Date(2019, 01, 1), y: 75 },
      { x: new Date(2019, 02, 1), y: 73 },
      { x: new Date(2019, 03, 1), y: 76 },
      { x: new Date(2019, 04, 1), y: 77 },
      { x: new Date(2019, 05, 1), y: 79 },
      { x: new Date(2019, 06, 1), y: 71 },
      { x: new Date(2019, 07, 1), y: 68 },
      ]
      }
      ]
      });
      chart.render();

      var chart = new CanvasJS.Chart("chartContainer3",
      {
      title:{
        text: "pH",
        fontFamily: "sans-serif",
        fontSize: 20
      },
      axisX: {
        interval: 1,
        title: "Month",
        gridThickness: 0,
        lineThickness: 2,
        tickLength: 7,
        tickThickness: 2
      },
      axisY:{
        interval: 1,
        title: "Average pH",
        gridThickness: 0,
        lineThickness: 2,
        tickLength: 7,
        tickThickness: 2,
        viewportMaximum: 10,
        maximum: 10,
        minimum: 2,
        stripLines: [
          {                
            value: #{userPH},   
            thickness: 1,
            color: "blue"
          },
          {                
            startValue: #{userPH} - 0.5,
            endValue: #{userPH} + 0.5,  
            thickness: 1,
            color: "#99ccff"
        }
          ]                 

      },
      data: [
      {
      type: "line",
      color: "red",
      showInLegend: true,
      legendText: "Average pH",
      dataPoints: [
      { x: new Date(2019, 00, 1), y: 6.3 },
      { x: new Date(2019, 01, 1), y: 6.3 },
      { x: new Date(2019, 02, 1), y: 6.2 },
      { x: new Date(2019, 03, 1), y: 5.6 },
      { x: new Date(2019, 04, 1), y: 6.7 },
      { x: new Date(2019, 05, 1), y: 6.9 },
      { x: new Date(2019, 06, 1), y: 6.1 },
      { x: new Date(2019, 07, 1), y: 6.8 },
      { x: new Date(2019, 08, 1), y: 6.3 },
      { x: new Date(2019, 09, 1), y: 6.2 },
      { x: new Date(2019, 10, 1), y: 6.3 },
      { x: new Date(2019, 11, 1), y: 6.0 }
      ]
      }
      ]
      });
      chart.render();
      }

      function myFunction() {
        var x = document.createElement("INPUT");
        x.setAttribute("type", "date");
        x.setAttribute("value", "2014-02-09");
        document.body.appendChild(x);
      

      };

    script(type='text/javascript' src='https://canvasjs.com/assets/script/canvasjs.min.js')
  body
    include partials/header
    main
      block content
    include partials/footer
    script(src="/static/main.js")
