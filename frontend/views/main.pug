doctype html
html
  head
    title #{pageTitle} | eIEIO
    link(rel="stylesheet" href="/static/styles.css")
    //- Favicon
    link(rel='icon' href='/images/sdp-logo.png' type='image/gif' sizes='16x16')  
    script(src="https://canvasjs.com/assets/script/canvasjs.min.js")      
    script(src="https://cdn.plot.ly/plotly-latest.min.js")

    //- link(rel="icon" href="images/sdp-logo.png" type="image/x-icon")

    //- Script for Carbon Monoxide Graph
    script(type='text/javascript').
      var PHSmooth = "false";
      var COSmooth = "false";
      var moistSmooth = "false";

      window.onload = function () {

        getWarningMessages();

        //- Display Co, Moisture and pH Heatmaps
        displayCOHeatmap(window.COSmooth);
        displayMoistHeatmap(window.moistSmooth);
        displayPHHeatmap(window.PHSmooth);

        //- Display Co, Moisture and pH Trend Graphs
        displayCOTrends();
        displayMoistTrends();
        displayPHTrends();

      }

      function getWarningMessages() {
        var numSevere = 0;
        var numWarning = 0;
        //- Text for most recent readings - CO
        var currCO = parseFloat(#{surveyCO});
        var userCO = parseFloat(#{userCO});
        if (currCO > (userCO + 2.5)) {
          var str = "DANGER: Very High Levels of CO";
          var result = str.fontcolor("red");
          numSevere++;
          document.getElementById("COStatus").innerHTML=result;
        } else if (currCO > (userCO + 1)) {
          var str = "WARNING: High Levels of CO";
          var result = str.fontcolor("red");
          numWarning++;
          document.getElementById("COStatus").innerHTML=result;
        } else if (currCO < (userCO - 2.5)) {
          var str = "DANGER: Very Low Levels of CO";
          var result = str.fontcolor("red");
          numSevere++;
          document.getElementById("COStatus").innerHTML=result;
        }  else if (currCO < (userCO - 1)) {
          var str = "WARNING: Low Levels of CO";
          var result = str.fontcolor("red");
          numWarning++;
          document.getElementById("COStatus").innerHTML=result;
        } else {
          var str = "OK";
          var result = str.fontcolor("green");
          document.getElementById("COStatus").innerHTML=result;
        }       


        //- Text for most recent readings - moisture
        var currMoist = parseFloat(#{surveyMoist});
        var userMoist = parseFloat(#{userMoist});
        if (currMoist > (userMoist + 15)) {
          var str = "DANGER: Soil is Very Moist";
          var result = str.fontcolor("red");
          numSevere++;
          document.getElementById("moistStatus").innerHTML=result;
        } else if (currMoist > (userMoist + 5)) {
          var str = "WARNING: Soil is Too Moist";
          var result = str.fontcolor("red");
          numWarning++;
          document.getElementById("moistStatus").innerHTML=result;
        } else if (currMoist < (userMoist - 15)) {
          var str = "DANGER: Soil is Too Dry";
          var result = str.fontcolor("red");
          numSevere++;
          document.getElementById("moistStatus").innerHTML=result;
        }  else if (currMoist < (userMoist - 5)) {
          var str = "WARNING: Soil is Very Dry";
          var result = str.fontcolor("red");
          numWarning++;
          document.getElementById("moistStatus").innerHTML=result;
        } else {
          var str = "OK";
          var result = str.fontcolor("green");
          document.getElementById("moistStatus").innerHTML=result;
        }

        
        //- Text for most recent readings - pH
        var currPH = parseFloat(#{surveyPH});
        var userPH = parseFloat(#{userPH});
        if (currPH > (userPH + 1.2)) {
          var str = "DANGER: Soil is very alkaline";
          var result = str.fontcolor("red");
          numSevere++;
          document.getElementById("PHStatus").innerHTML=result;
        } else if (currPH > (userPH + 0.5)) {
          var str = "WARNING: Soil is too alkaline";
          var result = str.fontcolor("red");
          numWarning++;
          document.getElementById("PHStatus").innerHTML=result;
        } else if (currPH < (userPH - 1.2)) {
          var str = "DANGER: Soil is very acidic";
          var result = str.fontcolor("red");
          numSevere++;
          document.getElementById("PHStatus").innerHTML=result;
        } else if (currPH < (userPH - 0.5)) {
          var str = "WARNING: Soil Too Acidic";
          var result = str.fontcolor("red");
          numWarning++;
          document.getElementById("PHStatus").innerHTML=result;
        } else {
          var str = "OK";
          var result = str.fontcolor("green");
          document.getElementById("PHStatus").innerHTML=result;
        }       

        var warningStr = numSevere + " severe warnings, " + numWarning + " warnings.";
        document.getElementById("numWarnings").innerHTML = warningStr;
      }
   

      function togglePHSmoothing() {
        if (window.PHSmooth == "best") {
          window.PHSmooth = "false";
          document.getElementById("togglePHButton").innerHTML= "Toggle Smoothing";
        } else {
          window.PHSmooth = "best";
          document.getElementById("togglePHButton").innerHTML= "Un-toggle Smoothing";
        }

        displayPHHeatmap(window.PHSmooth);
      };


      function toggleCOSmoothing() {
        if (window.COSmooth == "best") {
          window.COSmooth = "false";
          document.getElementById("toggleCOButton").innerHTML= "Toggle Smoothing";
        } else {
          window.COSmooth = "best";
          document.getElementById("toggleCOButton").innerHTML= "Un-toggle Smoothing";
        }

        displayCOHeatmap(window.COSmooth);
      };


      function toggleMoistSmoothing() {
        if (window.moistSmooth == "best") {
          window.moistSmooth = "false";
          document.getElementById("toggleMoistButton").innerHTML= "Toggle Smoothing";
        } else {
          window.moistSmooth = "best";
          document.getElementById("toggleMoistButton").innerHTML= "Un-toggle Smoothing";
        }

        displayMoistHeatmap(window.moistSmooth);
      };


      function displayCOHeatmap(COSmooth) {
        window.PLOTLYENV = { BASE_URL: "https://plot.ly" };

        var COheatmap = document.getElementById("co-heatmap");

        var x = [-3.1964814, -3.1930868, -3.1896922, -3.1862976];
        var y = [55.94071, 55.94153];
        var z = [[1,3,2,2],[3,2,3,1]];

        var text = z.map (function(z, i) { return z.map (function (value, j) {
          return ` Longitude: ${y[i]}<br> Latitude: ${x[j]} <br> Value: ${value.toFixed(2)} `
            });
          });

          Plotly.plot(COheatmap, [{
            type: 'heatmap',
            x: x,
            y: y,
            z: z,
            zmin: 0,
            zmax: 9,
            text: text,
            hoverinfo: 'text',
            zsmooth: COSmooth,
            colorscale: [
                [0, "#ffffff"],
                [1, "#862d2d"]
              ]
          }], {
            title: "Carbon Monoxide Levels",
            xaxis: { title: 'Latitude' },
            yaxis: { title: 'Longitude' },
            autosize: true,
            showLegend: true,
            font: {
              size: 12,
              family: "Arial, sans serif"
            },
            height: 500,
          });
      }


      function displayMoistHeatmap(moistSmooth) {
        window.PLOTLYENV = { BASE_URL: "https://plot.ly" };

        var moistureheatmap = document.getElementById("moisture-heatmap");

        var x = [-3.1964814, -3.1930868, -3.1896922, -3.1862976];
        var y = [55.94071, 55.94153];
        var z = [[150,250,580,700],[200,400,550,650]];

        var text = z.map (function(z, i) { return z.map (function (value, j) {
          return ` Longitude: ${y[i]}<br> Latitude: ${x[j]} <br> Value: ${value.toFixed(2)} `
            });
          });

          Plotly.plot(moistureheatmap, [{
            type: 'heatmap',
            x: x,
            y: y,
            z: z,
            zmax: 950,
            zmin: 0,
            text: text,
            hoverinfo: 'text',
            zsmooth: moistSmooth,
            colorscale: [
          [0, "#ffffff"],
          [1, "#1f3d7a"]
        ]
          }], {
            title: "Soil Moisture",
            xaxis: { title: 'Latitude' },
            yaxis: { title: 'Longitude' },
            autosize: true,
            showLegend: true,
            font: {
              size: 12,
              family: "Arial, sans serif"
            },
            height: 500,
          });
      }


      function displayPHHeatmap(PHsmooth) {

        // pH Heatmap
        window.PLOTLYENV = { BASE_URL: "https://plot.ly" };

        var pHheatmap = document.getElementById("pH-heatmap");

        var x = [-3.1964814, -3.1930868, -3.1896922, -3.1862976];
        var y = [55.94071, 55.94153];
        var z = [[7,6,5,6],[6,7,8,7]];

        var text = z.map (function(z, i) { return z.map (function (value, j) {
          return ` Longitude: ${y[i]}<br> Latitude: ${x[j]} <br> Value: ${value.toFixed(2)} `
            });
          });

          Plotly.plot(pHheatmap, [{
            type: 'heatmap',
            x: x,
            y: y,
            z: z,
            zmax: 14,
            zmin: 0,
            text: text,
            hoverinfo: 'text',
            zsmooth: PHSmooth,
            colorscale: [
          [0, "#ff9f80"],
          [0.25, "#ffcc99"],
          [0.5, "#c6ebd8"],
          [0.75, "#ddccff"],
          [1, "#adadeb"]
        ]
          }], {
            title: "Soil pH",
            xaxis: { title: 'Latitude' },
            yaxis: { title: 'Longitude' },
            autosize: true,
            showLegend: true,
            font: {
              size: 12,
              family: "Arial, sans serif"
            },
            height: 500,
          });
      };


      function displayCOTrends() {
        var chart = new CanvasJS.Chart("chartContainer1",
          {
          title:{
            text: "Carbon Monoxide",
            fontFamily: "sans-serif",
            fontSize: 20
          },
          axisX: {
            interval: 1,
            title: "Month",
            gridThickness: 0,
            lineThickness: 2,
            tickLength: 7,
            tickThickness: 2,

          },
          axisY:{
            interval: 1,
            title: "Average CO (ppm)",
            gridThickness: 0,
            lineThickness: 2,
            tickLength: 7,
            tickThickness: 2,
            viewportMinimum: 0,
            viewportMaximum: 10,
            stripLines: [
              {                
                value: parseFloat(#{userCO}),  // ---------- get desired value -------
                thickness: 1,
                color: "blue",
              },
              {                
                startValue: parseFloat(#{userCO}) - 0.5,  // ---------- get desired value -------
                endValue: parseFloat(#{userCO}) + 0.5,  // ---------- get desired value -------
                thickness: 1,
                color: "#99e6ff"
            }
              ]                 
          },
          data: [
          {
          type: "line",
          color: "orange",
          showInLegend: true,
          legendText: "Average CO",
          dataPoints: [
          { x: new Date(2020, 00, 1), y: 4.0 },
          { x: new Date(2020, 01, 1), y: 4.3 },
          { x: new Date(2020, 02, 1), y: 4.2 },
          { x: new Date(2020, 03, 1), y: Math.round((#{accumulatedCO}/#{numberOfSurveys}) * 100 + Number.EPSILON ) / 100},
          ]
          }
          ]
          });
        chart.render();
      }


      function displayMoistTrends() {
        var chart = new CanvasJS.Chart("chartContainer2",
          {
          title:{
            text: "Soil Moisture",
            fontFamily: "sans-serif",
            fontSize: 20
          },
          axisX: {
            interval: 2,
            title: "Month",
            gridThickness: 0,
            lineThickness: 2,
            tickLength: 7,
            tickThickness: 2,
            crosshair: {
              enabled: true
            }
          },
          axisY:{
            interval: 10,
            title: "Average Soil Moisture (%)",
            gridThickness: 0,
            lineThickness: 2,
            tickLength: 7,
            tickThickness: 2,
            viewportMaximum: 100,
            minimum: 40,
            maximum: 100,
            stripLines: [
              {                
                value: parseFloat(#{userMoist}),  // ---------- get desired value -------
                thickness: 1,
                color: "blue"
              },
              {                
                startValue: parseFloat(#{userMoist}) -5,  // ---------- get desired value -------
                endValue: parseFloat(#{userMoist}) + 5,  // ---------- get desired value -------
                thickness: 1,
                color: "#99e6ff"
            }
              ]                 
          },
          data: [
            {
              type: "line",
              color: "green",
              showInLegend: true,
              legendText: "Average Soil Moisture",
              dataPoints: [
                { x: new Date(2020, 00, 1), y: 75 },
                { x: new Date(2020, 01, 1), y: 75 },
                { x: new Date(2020, 02, 1), y: 73 },
                { x: new Date(2020, 03, 1), y: Math.round(((#{accumulatedMoist})/(#{numberOfSurveys})) * 100 + Number.EPSILON ) / 100}
              ]
            }
          ]
          });
        chart.render();
      }


      function displayPHTrends() {
        var chart = new CanvasJS.Chart("chartContainer3",
          {
          title:{
            text: "pH",
            fontFamily: "sans-serif",
            fontSize: 20
          },
          axisX: {
            interval: 1,
            title: "Month",
            gridThickness: 0,
            lineThickness: 2,
            tickLength: 7,
            tickThickness: 2,
            crosshair: [
              {
                enanled: true
              }
            ]

          },
          axisY:{
            interval: 1,
            title: "Average pH",
            gridThickness: 0,
            lineThickness: 2,
            tickLength: 7,
            tickThickness: 2,
            viewportMaximum: 10,
            maximum: 10,
            minimum: 2,
            stripLines: [
              {                
                value: parseFloat(#{userPH}),  
                thickness: 1,
                color: "blue"
              },
              {                
                startValue: (parseFloat(#{userPH}) - 0.5),
                endValue: (parseFloat(#{userPH}) + 0.5),  
                thickness: 1,
                color: "#99e6ff"
            }
              ]                 

          },
          data: [
            {
            type: "line",
            color: "red",
            showInLegend: true,
            legendText: "Average pH",
            dataPoints: [
              { x: new Date(2020, 00, 1), y: 6.3 },
              { x: new Date(2020, 01, 1), y: 6.3 },
              { x: new Date(2020, 02, 1), y: 6.2 },
              { x: new Date(2020, 03, 1), y: (Math.round(((#{accumulatedPH})/(#{numberOfSurveys})) * 100 + Number.EPSILON) / 100)},
            ]
            }
          ]
          });
       chart.render();
      }
    

    script(type='text/javascript' src='https://canvasjs.com/assets/script/canvasjs.min.js')
  body
    include partials/header
    main
      block content
    include partials/footer
    script(src="/static/main.js")
